{"version":3,"sources":["Header.js","Add.js","Todo.js","Done.js","App.js","serviceWorker.js","index.js"],"names":["styles","toolbar","paddingTop","paddingRight","grow","flexGrow","menuButton","marginLeft","marginRight","Header","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","anchorEl","menuOpen","bind","assertThisInitialized","menuClose","event","setState","currentTarget","_this2","react_default","a","createElement","AppBar_default","position","Toolbar_default","style","IconButton_default","color","Badge_default","badgeContent","props","count","DoneAll_default","Typography_default","variant","onClick","MoreVert_default","Menu_default","open","Boolean","onClose","MenuItem_default","clear","React","Component","root","borderRadius","boxSizing","padding","display","alignItems","width","input","iconButton","Add","createRef","Paper_default","elevation","InputBase_default","placeholder","inputRef","task","current","value","handler","focus","Directions_default","Todo","List_default","data","map","item","ListItem_default","key","_id","Checkbox_default","disableRipple","onChange","done","ListItemText_default","primary","subject","remove","Delete_default","Done","checked","undo","api","App","src_Header","todo","filter","status","length","src_Add","add","src_Todo","Divider_default","src_Done","Snackbar_default","message","apiError","ReduxApp","connect","dispatch","fetch","concat","method","headers","Content-Type","body","JSON","stringify","then","res","json","type","window","location","hostname","match","store","createStore","arguments","undefined","action","toConsumableArray","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d3279127.chunk.js","sourcesContent":["import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Badge from '@material-ui/core/Badge';\n\nconst styles = {\n    toolbar: {\n        paddingTop: 5,\n        paddingRight: 15,\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n    },\n};\n\nclass Header extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            anchorEl: null\n        }\n\n        this.menuOpen = this.menuOpen.bind(this);\n        this.menuClose = this.menuClose.bind(this);\n    }\n\n    menuOpen(event) {\n        this.setState({ anchorEl: event.currentTarget });\n    }\n\n    menuClose() {\n        this.setState({ anchorEl: null });\n    }\n\n    render() {\n        return(\n            <AppBar position=\"static\">\n                <Toolbar style={styles.toolbar}>\n                    <IconButton\n                        style={styles.menuButton}\n                        color=\"inherit\">\n                        <Badge\n                            badgeContent={this.props.count}\n                            color=\"secondary\">\n                            <DoneAllIcon />\n                        </Badge>\n                    </IconButton>\n                    <Typography\n                        variant=\"h6\"\n                        color=\"inherit\"\n                        style={styles.grow}>\n                        React Todo\n                    </Typography>\n                    <IconButton\n                        color=\"inherit\"\n                        onClick={this.menuOpen}>\n                        <MoreVertIcon />\n                    </IconButton>\n                    <Menu\n                        anchorEl={this.state.anchorEl}\n                        open={Boolean(this.state.anchorEl)}\n                        onClose={this.menuClose}>\n                        <MenuItem onClick={() => {\n                            this.props.clear()\n                            this.menuClose()\n                        }}>\n                            Clear All Done\n                        </MenuItem>\n                    </Menu>\n                </Toolbar>\n            </AppBar>\n        )\n    }\n}\n\nexport default Header;\n","import React from 'react';\n\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport DirectionsIcon from '@material-ui/icons/Directions';\n\nconst styles = {\n    root: {\n        borderRadius: 0,\n        boxSizing: 'border-box',\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: '100%',\n    },\n    input: {\n        marginLeft: 8,\n        flexGrow: 1,\n    },\n    iconButton: {\n        marginRight: 15,\n        padding: 10,\n    },\n};\n\nclass Add extends React.Component {\n    constructor() {\n        super();\n\n        this.input = React.createRef();\n    }\n\n    render() {\n        return (\n            <div>\n                <Paper style={styles.root} elevation={1}>\n                    <InputBase\n                        style={styles.input}\n                        placeholder=\"Enter todo\"\n                        inputRef={this.input} />\n                    <IconButton\n                        style={styles.iconButton}\n                        color=\"primary\"\n                        onClick={() => {\n                            var task = this.input.current.value;\n                            if(!task) return false;\n\n                            this.props.handler(task);\n                            this.input.current.value = \"\";\n                            this.input.current.focus();\n                        }}>\n                        <DirectionsIcon />\n                    </IconButton>\n                </Paper>\n            </div>\n        )\n    }\n}\n\nexport default Add;\n","import React from 'react';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst styles = {\n  root: {\n    width: '100%',\n  },\n};\n\nclass Todo extends React.Component {\n    render() {\n        return (\n            <List style={styles.root}>\n                {this.props.data.map((item) => {\n                    return (\n                        <ListItem key={item._id}>\n                            <Checkbox disableRipple onChange={() => {\n                                this.props.done(item._id)\n                            }} />\n                            <ListItemText primary={item.subject}/>\n                            <IconButton onClick={() => {\n                                this.props.remove(item._id)\n                            }}>\n                                <DeleteIcon />\n                            </IconButton>\n                        </ListItem>\n                    )\n                })}\n            </List>\n        )\n    }\n}\n\nexport default Todo;\n","import React from 'react';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst styles = {\n  root: {\n    width: '100%',\n  },\n};\n\nclass Done extends React.Component {\n    render() {\n        return (\n            <List style={styles.root}>\n                {this.props.data.map((item) => {\n                    return (\n                        <ListItem key={item._id}>\n                            <Checkbox checked disableRipple onChange={() => {\n                                this.props.undo(item._id)\n                            }} />\n                            <ListItemText primary={item.subject}/>\n                            <IconButton onClick={() => {\n                                this.props.remove(item._id)\n                            }}>\n                                <DeleteIcon />\n                            </IconButton>\n                        </ListItem>\n                    )\n                })}\n            </List>\n        )\n    }\n}\n\nexport default Done;\n","import React from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport Header from './Header';\nimport Add from './Add';\nimport Todo from './Todo';\nimport Done from './Done';\n\nimport { connect } from 'react-redux';\n\nconst api = 'http://206.189.42.134';\n\nclass App extends React.Component {\n    render() {\n        return (\n            <div>\n\n                <Header\n                    clear={this.props.clear}\n                    count={this.props.todo.filter((item) => {\n                        return item.status === 0\n                    }).length} />\n\n                <Add handler={this.props.add} />\n\n                <Todo\n                    done={this.props.done}\n                    remove={this.props.remove}\n                    data={this.props.todo.filter((item) => item.status === 0)} />\n\n                <Divider />\n\n                <Done\n                    undo={this.props.undo}\n                    remove={this.props.remove}\n                    data={this.props.todo.filter((item) => item.status === 1)} />\n\n                <Snackbar\n                    message=\"Server error\"\n                    open={this.props.apiError} />\n            </div>\n        )\n    }\n}\n\nvar ReduxApp = connect((state) => {\n    return {\n        todo: state.todo,\n        apiError: state.apiError || false\n    }\n}, (dispatch) => {\n    return {\n        add: (subject) => {\n            fetch(`${api}/tasks`, {\n                method: 'post',\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                    subject, status: 0\n                })\n            }).then((res) => res.json()).then((json) => {\n                dispatch({ type: 'ADD', todo: json });\n            });\n        },\n        remove: (_id) => {\n            fetch(`${api}/tasks/${_id}`, { method: 'delete' });\n            dispatch({ type: 'REMOVE', _id });\n        },\n        done: (_id) => {\n            fetch(`${api}/tasks/${_id}`, {\n                method: 'put',\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                    status: 1\n                })\n            });\n\n            dispatch({ type: 'DONE', _id });\n        },\n        undo: (_id) => {\n            fetch(`${api}/tasks/${_id}`, {\n                method: 'put',\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                    status: 0\n                })\n            });\n\n            dispatch({ type: 'UNDO', _id });\n        },\n        clear: () => {\n            fetch(`${api}/tasks`, { method: 'delete' });\n            dispatch({ type: 'CLEAR' });\n        }\n    }\n})(App);\n\nexport default ReduxApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReduxApp from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nconst api = 'http://206.189.42.134';\n\nvar store = createStore((state = { todo: [] }, action) => {\n    switch (action.type) {\n        case 'ADD':\n            return {\n                todo: [ ...state.todo, action.todo ]\n            }\n            break;\n        case 'REMOVE':\n            return {\n                todo: state.todo.filter((item) => item._id !== action._id)\n            }\n            break;\n        case 'DONE':\n            return {\n                todo: state.todo.map((item) => {\n                    if(item._id == action._id) item.status = 1;\n                    return item;\n                })\n            }\n            break;\n        case 'UNDO':\n            return {\n                todo: state.todo.map((item) => {\n                    if(item._id == action._id) item.status = 0;\n                    return item;\n                })\n            }\n            break;\n        case 'CLEAR':\n            return {\n                todo: state.todo.filter((item) => item.status === 0)\n            }\n            break;\n        case 'SET':\n            return {\n                todo: action.todo\n            }\n        default:\n            return state;\n    }\n});\n\nfetch(`${api}/tasks`).then((res) => res.json()).then((json) => {\n    store.dispatch({ type: 'SET', todo: json });\n});\n\nReactDOM.render(\n    <Provider store={store}>\n        <ReduxApp />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}